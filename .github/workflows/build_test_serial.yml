name: 'Build and Test QUICK Serial Version'

defaults:
  run:
    shell: bash

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  build-and-test-serial-legacy-configure-make:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: 'ubuntu-22.04'
            compiler-type: 'gnu'
            compiler-version: '10'
            c-compiler: 'gcc-10'
            cxx-compiler: 'g++-10'
            fortran-compiler: 'gfortran-10'
            compiler-install: 'gcc-10 g++-10 gfortran-10'
          - os: 'ubuntu-22.04'
            compiler-type: 'gnu'
            compiler-version: '11'
            c-compiler: 'gcc-11'
            cxx-compiler: 'g++-11'
            fortran-compiler: 'gfortran-11'
            compiler-install: 'gcc-11 g++-11 gfortran-11'
          - os: 'ubuntu-24.04'
            compiler-type: 'gnu'
            compiler-version: '12'
            c-compiler: 'gcc-12'
            cxx-compiler: 'g++-12'
            fortran-compiler: 'gfortran-12'
            compiler-install: 'gcc-12 g++-12 gfortran-12'
          - os: 'ubuntu-24.04'
            compiler-type: 'gnu'
            compiler-version: '13'
            c-compiler: 'gcc-13'
            cxx-compiler: 'g++-13'
            fortran-compiler: 'gfortran-13'
            compiler-install: 'gcc-13 g++-13 gfortran-13'
          - os: 'ubuntu-24.04'
            compiler-type: 'gnu'
            compiler-version: '14'
            c-compiler: 'gcc-14'
            cxx-compiler: 'g++-14'
            fortran-compiler: 'gfortran-14'
            compiler-install: 'gcc-14 g++-14 gfortran-14'
          - os: 'ubuntu-24.04-arm'
            compiler-type: 'gnu'
            compiler-version: '14'
            c-compiler: 'gcc-14'
            cxx-compiler: 'g++-14'
            fortran-compiler: 'gfortran-14'
            compiler-install: 'gcc-14 g++-14 gfortran-14'
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} - Serial - Legacy - ${{ matrix.compiler-type }} - ${{ matrix.compiler-version }}
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
      - name: 'Linux: Install Dependencies for Serial Version'
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get -y install ${{ matrix.compiler-install }} parallel
      - name: 'Linux: Log Softare Environment Configuration'
        if: runner.os == 'Linux'
        run: |
          echo "OS version:"
          cat /etc/os-release
          echo
          echo "Kernel version:"
          uname -a
          echo
          ldd --version
          echo
          echo "Fortran compiler version:"
          ${{ matrix.fortran-compiler }} --version
          echo
          echo "GNU Parallel version:"
          parallel --version
      - name: 'Setup Environment Variables for Building and Running Tests'
        run: |
          echo "QUICK_HOME=$PWD/install" >> "$GITHUB_ENV"
          echo "PARALLEL_TEST_COUNT=2" >> "$GITHUB_ENV"
          echo "CC=${{ matrix.c-compiler }}" >> "$GITHUB_ENV"
          echo "CXX=${{ matrix.cxx-compiler }}" >> "$GITHUB_ENV"
          echo "FC=${{ matrix.fortran-compiler }}" >> "$GITHUB_ENV"
      - name: 'Configure Serial Version'
        run: |
          ./configure --serial --enablef --prefix $PWD/install \
            ${{ matrix.compiler-type }}
      - name: 'Build and Install Serial Version Using 2 Jobs'
        run: |
          make -j2 all install
      - name: 'Run Tests for Serial Version (Make)'
        run: |
          make fulltest
      - name: 'Upload Test Artifacts for Serial Version'
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: serial-legacy-configure-make-tests-${{ matrix.os }}-${{ matrix.compiler-type }}-${{ matrix.compiler-version }}
          path: ${{ github.workspace }}/install/test/runs/serial
          retention-days: 3
          compression-level: 6
      - name: 'Download Test Artifacts for Serial Version'
        uses: actions/download-artifact@v4
        with:
          name: serial-legacy-configure-make-tests-${{ matrix.os }}-${{ matrix.compiler-type }}-${{ matrix.compiler-version }}
      - name: 'Display Artifacts'
        run: |
          ls -R
  build-and-test-serial-cmake:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: 'ubuntu-22.04'
            compiler-type: 'gnu'
            compiler-version: '10'
            c-compiler: 'gcc-10'
            cxx-compiler: 'g++-10'
            fortran-compiler: 'gfortran-10'
            compiler-install: 'gcc-10 g++-10 gfortran-10'
          - os: 'ubuntu-22.04'
            compiler-type: 'gnu'
            compiler-version: '11'
            c-compiler: 'gcc-11'
            cxx-compiler: 'g++-11'
            fortran-compiler: 'gfortran-11'
            compiler-install: 'gcc-11 g++-11 gfortran-11'
          - os: 'ubuntu-24.04'
            compiler-type: 'gnu'
            compiler-version: '12'
            c-compiler: 'gcc-12'
            cxx-compiler: 'g++-12'
            fortran-compiler: 'gfortran-12'
            compiler-install: 'gcc-12 g++-12 gfortran-12'
          - os: 'ubuntu-24.04'
            compiler-type: 'gnu'
            compiler-version: '13'
            c-compiler: 'gcc-13'
            cxx-compiler: 'g++-13'
            fortran-compiler: 'gfortran-13'
            compiler-install: 'gcc-13 g++-13 gfortran-13'
          - os: 'ubuntu-24.04'
            compiler-type: 'gnu'
            compiler-version: '14'
            c-compiler: 'gcc-14'
            cxx-compiler: 'g++-14'
            fortran-compiler: 'gfortran-14'
            compiler-install: 'gcc-14 g++-14 gfortran-14'
          - os: 'ubuntu-24.04'
            compiler-type: 'clang'
            compiler-version: '17'
            c-compiler: 'clang-17'
            cxx-compiler: 'clang++-17'
            fortran-compiler: 'gfortran-13'
            compiler-install: 'clang-17 gfortran-13'
          - os: 'ubuntu-24.04'
            compiler-type: 'clang'
            compiler-version: '18'
            c-compiler: 'clang-18'
            cxx-compiler: 'clang++-18'
            fortran-compiler: 'gfortran-14'
            compiler-install: 'clang-18 gfortran-14'
          - os: 'ubuntu-24.04-arm'
            compiler-type: 'gnu'
            compiler-version: '14'
            c-compiler: 'gcc-14'
            cxx-compiler: 'g++-14'
            fortran-compiler: 'gfortran-14'
            compiler-install: 'gcc-14 g++-14 gfortran-14'
          - os: 'ubuntu-24.04-arm'
            compiler-type: 'clang'
            compiler-version: '18'
            c-compiler: 'clang-18'
            cxx-compiler: 'clang++-18'
            fortran-compiler: 'gfortran-14'
            compiler-install: 'clang-18 gfortran-14'
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} - Serial - CMake - ${{ matrix.compiler-type }} - ${{ matrix.compiler-version }}
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
      - name: 'Linux: Install Dependencies for Serial Version (CMake)'
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get -y install ${{ matrix.compiler-install }} \
            cmake parallel
      - name: 'Linux: Log Softare Environment Configuration (CMake)'
        if: runner.os == 'Linux'
        run: |
          echo "OS version:"
          cat /etc/os-release
          echo
          echo "Kernel version:"
          uname -a
          echo
          ldd --version
          echo
          echo "Fortran compiler version:"
          ${{ matrix.fortran-compiler }} --version
          echo
          echo "CMake version:"
          cmake --version
          echo
          echo "GNU Parallel version:"
          parallel --version
      - name: 'Setup Environment Variables for Building and Running Tests'
        run: |
          echo "QUICK_HOME=$PWD/install" >> "$GITHUB_ENV"
          echo "PARALLEL_TEST_COUNT=2" >> "$GITHUB_ENV"
          echo "CC=${{ matrix.c-compiler }}" >> "$GITHUB_ENV"
          echo "CXX=${{ matrix.cxx-compiler }}" >> "$GITHUB_ENV"
          echo "FC=${{ matrix.fortran-compiler }}" >> "$GITHUB_ENV"
      - name: 'Configure Serial Version (CMake)'
        run: |
          mkdir build
          cd build
          cmake .. -DCOMPILER=MANUAL -DCMAKE_C_COMPILER=$CC \
            -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_Fortran_COMPILER=$FC \
            -DENABLEF=TRUE -DCMAKE_INSTALL_PREFIX=$PWD/../install
      - name: 'Build and Install Serial Version (CMake) Using 2 Jobs'
        run: |
          cd build
          cmake --build . --parallel 2
          cmake --install .
      - name: 'Run Tests for Serial Version'
        run: |
          cd install
          ./runtest --serial --full
      - name: 'Upload Test Artifacts for Serial Version (CMake)'
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: serial-cmake-tests-${{ matrix.os }}-${{ matrix.compiler-type }}-${{ matrix.compiler-version }}
          path: ${{ github.workspace }}/install/test/runs/serial
          retention-days: 3
          compression-level: 6
      - name: 'Download Test Artifacts for Serial Version (CMake)'
        uses: actions/download-artifact@v4
        with:
          name: serial-cmake-tests-${{ matrix.os }}-${{ matrix.compiler-type }}-${{ matrix.compiler-version }}
      - name: 'Display Artifacts'
        run: ls -R
